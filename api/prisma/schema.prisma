generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AccountCard {
  id       Int      @id @default(autoincrement())
  dexId    Int      @map("dex_id")
  favorite Boolean
  added    DateTime @default(now()) @db.DateTime(0)

  @@map("Account_card")
}

model AccountDeck {
  id        Int @id @default(autoincrement())
  accountId Int @map("account_id")
  cardId    Int @map("card_id")

  @@map("Account_decks")
}

model AccountDex {
  id        Int @id @default(autoincrement())
  dexId     Int @map("dex_id")
  accountId Int @map("account_id")

  @@map("Account_dex")
}

model Account {
  id             Int            @id @default(autoincrement())
  inGameName     String         @map("in_game_name") @db.VarChar(32)
  friendCode     String         @unique(map: "friend_code") @map("friend_code") @db.VarChar(32)
  userId         Int            @map("player_id")
  user           User           @relation(fields: [userId], references: [id], onDelete: NoAction, map: "Accounts_ibfk_1")
  pokemonTrades PokemonTrade[]

  @@index([userId], map: "player_id")
  @@map("Accounts")
}

model DiscordChannel {
  id            Int    @id @default(autoincrement())
  guildId       String @map("guild_id") @db.VarChar(32)
  channelId     String @map("channel_id") @db.VarChar(32)
  channelTypeId Int    @map("channel_type_id")

  @@map("Discord_channels")
}

model ExpansionBooster {
  id             Int              @id @default(autoincrement())
  expansionId    Int?             @map("expansion_id")
  name           String           @db.VarChar(16)
  expansion      Expansion?       @relation(fields: [expansionId], references: [id], map: "Expansion_Boosters_ibfk_1")
  pokemonCardDex PokemonCardDex[]

  @@index([expansionId], map: "expansion_id")
  @@map("Expansion_boosters")
}

model Expansion {
  id                Int                @id @default(autoincrement())
  code              String             @db.VarChar(8)
  name              String             @db.VarChar(32)
  totalCards        Int                @map("total_cards")
  expansionBoosters ExpansionBooster[]
  pokemonCardDex    PokemonCardDex[]

  @@map("Expansions")
}

model Permission {
  id             Int    @id @default(autoincrement())
  name           String @db.VarChar(32)
  hierarchyLevel Int    @map("hierarchy_level")
  users          User[]

  @@map("Permissions")
}

model PokemonAttack {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(32)
  description String @db.MediumText

  @@map("Pokémon_attack")
}

model PokemonCardDex {
  id                  Int                  @id @default(autoincrement())
  dexId               Int                  @map("dex_id")
  name                String               @db.VarChar(32)
  namePostfixId       Int?                 @map("name_postfix_id")
  hp                  Int?
  typeId              Int?                 @map("type_id")
  rarityId            Int                  @map("rarity_id")
  expansionId         Int                  @map("expansion_id")
  boosterId           Int                  @map("booster_id")
  evolutionStageId    Int?                 @map("evolution_stage_id")
  abilityId           Int?                 @map("ability_id")
  attackOneId         Int?                 @map("attack_one_id")
  attackTwoId         Int?                 @map("attack_two_id")
  attackThreeId       Int?                 @map("attack_three_id")
  preEvolutionId      Int?                 @map("pre-evolution_id")
  evolutionId         Int?                 @map("evolution_id")
  illustratorId       Int?                 @map("illustrator_id")
  languageId          Int?                 @map("language_id")
  pokemonCardLanguage PokemonCardLanguage? @relation(fields: [languageId], references: [id], map: "Pokémon_Card_Dex_ibfk_1")
  pokemonType         PokemonType?         @relation(fields: [typeId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_2")
  pokemonCardRarity   PokemonCardRarity    @relation(fields: [rarityId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_3")
  pokemonPostfix      PokemonPostfix?      @relation(fields: [namePostfixId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_4")
  expansion           Expansion            @relation(fields: [expansionId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_5")
  expansionBooster    ExpansionBooster     @relation(fields: [boosterId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_6")
  pokemonTrades       PokemonTrade[]

  @@unique([dexId, expansionId], map: "dex_id")
  @@index([expansionId], map: "Pokémon_Card_Dex_ibfk_5")
  @@index([boosterId], map: "booster_id")
  @@index([languageId], map: "language_id")
  @@index([namePostfixId], map: "name_variation_id")
  @@index([rarityId], map: "rarity_id")
  @@index([typeId], map: "type_id")
  @@map("Pokémon_card_dex")
}

model PokemonCardLanguage {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(16)
  pokemonCardDex PokemonCardDex[]

  @@map("Pokémon_card_language")
}

model PokemonCardRarity {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(32)
  pokemonCardDex PokemonCardDex[]

  @@map("Pokémon_card_rarities")
}

model PokemonEnergy {
  id     Int @id @default(autoincrement())
  type   Int
  amount Int

  @@map("Pokémon_energy")
}

model PokemonPostfix {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(8)
  pokemonCardDex PokemonCardDex[]

  @@map("Pokémon_postfixes")
}

model PokemonStage {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(8)

  @@map("Pokémon_stage")
}

model PokemonTrade {
  id               Int            @id @default(autoincrement())
  pokemonId        Int            @map("pokemon_id")
  doNotUsePlayer   Int?           @map("do_not_use_player")
  tradeTypeId      Int            @map("trade_type_id")
  accountId        Int            @map("account_id")
  updated          DateTime       @default(now()) @db.DateTime(0)
  account          Account        @relation(fields: [accountId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_1")
  pokemonCardDex   PokemonCardDex @relation(fields: [pokemonId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_2")
  tradeType        TradeType      @relation(fields: [tradeTypeId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_3")

  @@unique([pokemonId, accountId], map: "pokemon_account_id")
  @@index([accountId], map: "account_id")
  @@index([tradeTypeId], map: "trade_type_id")
  @@map("Pokémon_trades")
}

model PokemonType {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(16)
  weakness       Int?
  pokemonCardDex PokemonCardDex[]

  @@map("Pokémon_types")
}

model Session {
  id        String   @id @db.VarChar(255)
  sid       String   @unique
  data      String   @db.MediumText
  expiresAt DateTime @db.Timestamp(6)

  @@index([expiresAt], map: "expiresAt")
  @@map("Session")
}

model TradeType {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(8)
  pokemonTrades PokemonTrade[]

  @@map("Trade_types")
}

model User {
  id            Int        @id @default(autoincrement())
  doNotUseDName String?    @map("do_not_use_dname") @db.VarChar(16)
  discordId     String     @unique(map: "discord_id") @map("discord_id") @db.VarChar(32)
  username      String     @db.VarChar(32)
  doNotUseFC    String?    @map("do_not_use_fc") @db.VarChar(20)
  permissionId  Int        @default(8) @map("permission_id")
  accessToken   String?    @map("access_token")
  refreshToken  String?    @map("refresh_token")
  accounts      Account[]
  permission    Permission @relation(fields: [permissionId], references: [id], onDelete: NoAction, map: "Players_ibfk_1")

  @@index([permissionId], map: "permission_id")
  @@map("Players")
}
