generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AccountCard {
  id       Int      @id @default(autoincrement())
  dexId    Int      @map("dex_id")
  favorite Boolean
  added    DateTime @default(now()) @db.DateTime(0)

  @@map("account_card")
}

model AccountDeck {
  id         Int @id @default(autoincrement())
  accountId  Int @map("account_id")
  cardId     Int @map("card_id")

  @@map("account_decks")
}

model AccountDex {
  id         Int @id @default(autoincrement())
  dexId      Int @map("dex_id")
  accountId  Int @map("account_id")

  @@map("account_dex")
}

model Account {
  id            Int            @id @default(autoincrement())
  inGameName    String         @db.VarChar(32) @map("in_game_name")
  friendCode    String         @unique(map: "friend_code") @db.VarChar(32) @map("friend_code")
  userId        Int            @map("player_id")
  user          User           @relation(fields: [userId], references: [id], onDelete: NoAction, map: "Accounts_ibfk_1")
  pokemonTrades PokemonTrade[]

  @@index([userId], map: "player_id")
  @@map("accounts")
}

model DiscordChannel {
  id            Int    @id @default(autoincrement())
  guildId       String @db.VarChar(32) @map("guild_id")
  channelId     String @db.VarChar(32) @map("channel_id")
  channelTypeId Int    @map("channel_type_id")

  @@map("discord_channels")
}

model ExpansionBooster {
  id             Int              @id @default(autoincrement())
  expansionId    Int?             @map("expansion_id")
  name           String           @db.VarChar(16)
  expansion      Expansion?       @relation(fields: [expansionId], references: [id], map: "Expansion_Boosters_ibfk_1")
  pokemonCardDex PokemonCardDex[]

  @@index([expansionId], map: "expansion_id")
  @@map("expansion_boosters")
}

model Expansion {
  id                Int                @id @default(autoincrement())
  code              String             @db.VarChar(8)
  name              String             @db.VarChar(32)
  totalCards        Int                @map("total_cards")
  expansionBoosters ExpansionBooster[]
  pokemonCardDex    PokemonCardDex[]

  @@map("expansions")
}

model Permission {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(32)
  hierarchyLevel Int      @map("hierarchy_level")
  users          User[]

  @@map("permissions")
}

model PokemonAttack {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(32)
  description String @db.MediumText

  @@map("pokémon_attack")
}

model PokemonCardDex {
  id                  Int                  @id @default(autoincrement())
  dexId               Int                  @map("dex_id")
  name                String               @db.VarChar(32)
  namePostfixId       Int?                 @map("name_postfix_id")
  hp                  Int?
  typeId              Int?                 @map("type_id")
  rarityId            Int                  @map("rarity_id")
  expansionId         Int                  @map("expansion_id")
  boosterId           Int                  @map("booster_id")
  evolutionStageId    Int?                 @map("evolution_stage_id")
  abilityId           Int?                 @map("ability_id")
  attackOneId         Int?                 @map("attack_one_id")
  attackTwoId         Int?                 @map("attack_two_id")
  attackThreeId       Int?                 @map("attack_three_id")
  preEvolutionId      Int?                 @map("pre-evolution_id")
  evolutionId         Int?                 @map("evolution_id")
  illustratorId       Int?                 @map("illustrator_id")
  languageId          Int?                 @map("language_id")
  pokemonCardLanguage PokemonCardLanguage? @relation(fields: [languageId], references: [id], map: "Pokémon_Card_Dex_ibfk_1")
  pokemonType         PokemonType?         @relation(fields: [typeId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_2")
  pokemonCardRarity   PokemonCardRarity    @relation(fields: [rarityId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_3")
  pokemonPostfix      PokemonPostfix?      @relation(fields: [namePostfixId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_4")
  expansion           Expansion            @relation(fields: [expansionId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_5")
  expansionBooster    ExpansionBooster     @relation(fields: [boosterId], references: [id], onDelete: NoAction, map: "Pokémon_Card_Dex_ibfk_6")
  pokemonTrades       PokemonTrade[]

  @@unique([dexId, expansionId], map: "dex_id")
  @@index([expansionId], map: "Pokémon_Card_Dex_ibfk_5")
  @@index([boosterId], map: "booster_id")
  @@index([languageId], map: "language_id")
  @@index([namePostfixId], map: "name_variation_id")
  @@index([rarityId], map: "rarity_id")
  @@index([typeId], map: "type_id")
  @@map("pokémon_card_dex")
}

model PokemonCardLanguage {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(16)
  pokemonCardDex PokemonCardDex[]

  @@map("pokémon_card_language")
}

model PokemonCardRarity {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(32)
  pokemonCardDex PokemonCardDex[]

  @@map("pokémon_card_rarities")
}

model PokemonEnergy {
  id     Int @id @default(autoincrement())
  type   Int
  amount Int

  @@map("pokémon_energy")
}

model PokemonPostfix {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(8)
  pokemonCardDex PokemonCardDex[]

  @@map("pokémon_postfixes")
}

model PokemonStage {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(8)

  @@map("pokémon_stage")
}

model PokemonTrade {
  id             Int            @id @default(autoincrement())
  pokemonId      Int            @map("pokemon_id")
  accountId      Int            @map("account_id")
  tradeTypeId    Int            @map("trade_type_id")
  doNotUsePlayer Int?           @map("do_not_use_player") //player_id
  account        Account        @relation(fields: [accountId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_1")
  pokemonCardDex PokemonCardDex @relation(fields: [pokemonId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_2")
  tradeType      TradeType      @relation(fields: [tradeTypeId], references: [id], onDelete: NoAction, map: "Pokémon_Trades_ibfk_3")
  updated        DateTime       @default(now()) @db.DateTime(0)

  @@unique([pokemonId, accountId], map: "pokemon_account_id")
  @@index([accountId], map: "account_id")
  @@index([tradeTypeId], map: "trade_type_id")
  @@map("pokémon_trades")
}

model PokemonType {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(16)
  weakness       Int?
  pokemonCardDex PokemonCardDex[]

  @@map("pokémon_types")
}

model Session {
  id          String   @id @db.VarChar(255)
  sid         String   @unique
  data        String   @db.MediumText
  expiresAt   DateTime @db.Timestamp(6)

  @@index([expiresAt], map: "expiresAt")
  @@map("session")
}

model TradeType {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(8)
  pokemonTrades PokemonTrade[]

  @@map("trade_types")
}

model User {
  id            Int        @id @default(autoincrement())
  discordId     String     @unique(map: "discord_id") @db.VarChar(32) @map("discord_id")
  username      String     @db.VarChar(32)
  permissionId  Int        @default(8) @map("permission_id")
  accessToken   String?    @map("access_token")
  refreshToken  String?    @map("refresh_token")
  doNotUseDName String?    @map("do_not_use_dname") //display_name
  doNotUseFC    String?    @map("do_not_use_fc") //friend_code
  doNotUseMain  String?    @map("do_not_use_main") //main_id
  accounts      Account[]
  permission    Permission @relation(fields: [permissionId], references: [id], onDelete: NoAction, map: "Players_ibfk_1")

  @@index([permissionId], map: "permission_id")
  @@map("players")
}